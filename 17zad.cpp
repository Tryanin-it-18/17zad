#include <iostream> 
#include <string>   // Библиотека для строк
#include <cmath>    // Библиотека мат-функций

using namespace std;

// пишем функцию для квадратного корня с ЗАданной точечкой
string sqrt(int m, int n) {
    string res; // строчка с рез.
    double kvd_m = sqrt(m); // считаем кв кор.
    res = to_string(kvd_m); // Преобразуем результат в строку

    // Удаляем точку и оставляем только n знаков после запятой
    size_t poz_toch = res.find('.'); // находим поз точки
    if (poz_toch != string::npos) { // Если нашли 
        res.erase(poz_toch, 1); // выкидываем точку 
        res = res.substr(0, poz_toch) + res.substr(poz_toch); //  целуая + дробная часть 
    }

    // Убедимся, что у нас достаточно знаков
    if (res.length() < n) {
        res.append(n - res.length(), '0'); // сам добавим нули, если не хвататет 
    }
    else {
        res = res.substr(0, n); // Обрезаем строку до n знаков
    }

    return res; // Возвращаем результат
}

int main() {
    setlocale(LC_ALL, "RU");

    int m; //Хранения введенного числа
    int n; //Хранения количества знаков

    while (true) { // Запускаем цикл для проверки на вообще глупого 
        cout << "Введите целое неотрицательное число m: ";
        cin >> m;

        // Проверяем корректность ввода
        if (cin.fail() || m < 0) { // Если ввод некорректен или число отрицательное
            cout << "Ошибка: введите неотрицательное целое число." << endl;
            cin.clear(); // Очищаем состояние cin
            cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Игнорируем неправильный ввод
        }
        else { // Если ввод корректен, выходим из цикла
            break;
        }
    }

    // Запрашиваем у пользователя количество знаков n
    while (true) {
        cout << "Введите количество знаков n (n >= 50): ";
        cin >> n;

        // Проверяем корректность ввода
        if (cin.fail() || n < 50) { // Если ввод некорректен или n меньше 50
            cout << "Ошибка: n должно быть не менее 50." << endl;
            cin.clear(); // Очищаем состояние cin
            cin.ignore(numeric_limits<streamsize>::max(), '\n'); // Игнорируем неправильный ввод
        }
        else { // Если ввод корректен, выходим из цикла
            break;
        }
    }

    // Вызываем функцию для вычисления квадратного корня
    string sqrt_result = sqrt(m, n);

    //выводим результат
    cout << "Квадратный корень из " << m << " с " << n << " знаками: " << sqrt_result << endl;

    return 0; // Завершаем программу
}